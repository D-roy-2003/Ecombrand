// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String     @id @default(cuid())
  email       String     @unique
  name        String
  password    String
  role        Role       @default(CUSTOMER)
  phoneNumber String?
  countryCode String?
  address     String?
  city        String?
  state       String?
  zipCode     String?
  country     String?
  profileImage String?
  isActive    Boolean    @default(true)
  lastLoginAt DateTime?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  orders      Order[]
  wishlist    Wishlist[]
  cart        Cart[]

  @@map("users")
}

model Admin {
  id                String    @id @default(cuid())
  email             String    @unique
  password          String
  firstName         String
  lastName          String
  phoneNumber       String?
  address           String?
  city              String?
  state             String?
  zipCode           String?
  country           String?
  profileImage      String?
  bio               String?
  department        String?
  permissions       String[]  @default([])
  isActive          Boolean   @default(true)
  lastLoginAt       DateTime?
  loginAttempts     Int       @default(0)
  lockedUntil       DateTime?
  twoFactorEnabled  Boolean   @default(false)
  twoFactorSecret   String?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  @@map("admins")
}

model Product {
  id            String      @id @default(cuid())
  name          String
  description   String
  price         Float
  originalPrice Float?
  stock         Int
  category      Category
  imageUrls     String[]
  sizes         String[]    @default([])
  isFeatured    Boolean     @default(false)
  discount      Float?      @default(0)
  isActive      Boolean     @default(true)
  displayOrder  Int         @default(0)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  orderItems    OrderItem[]
  wishlist      Wishlist[]
  cart          Cart[]

  @@map("products")
}

model Order {
  id         String      @id @default(cuid())
  userId     String
  totalPrice Float
  status     OrderStatus @default(PENDING)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  user       User        @relation(fields: [userId], references: [id])
  items      OrderItem[]

  @@map("orders")
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  productId String
  quantity  Int
  price     Float
  sizes     String?
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@map("order_items")
}

enum Role {
  ADMIN
  CUSTOMER
}

enum Category {
  TSHIRTS
  HOODIES
  ACCESSORIES
  PANTS
  SHOES
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}

model Wishlist {
  id        String   @id @default(cuid())
  userId    String
  productId String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([userId, productId])
  @@map("wishlists")
}

model Cart {
  id        String   @id @default(cuid())
  userId    String
  productId String
  quantity  Int
  sizes     String?
  addedAt   DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([userId, productId])
  @@map("carts")
}

model Analytics {
  id          String   @id @default(cuid())
  date        DateTime @unique
  totalSales  Float    @default(0)
  totalOrders Int      @default(0)
  totalUsers  Int      @default(0)
  revenue     Float    @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("analytics")
}
